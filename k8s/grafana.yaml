apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: sig-data
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.4.9
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: sig-data-secrets
                  key: GRAFANA_USER
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sig-data-secrets
                  key: GRAFANA_PASSWORD
            - name: INFLUXDB_URL
              valueFrom:
                configMapKeyRef:
                  name: sig-data-config
                  key: INFLUXDB_URL
            - name: INFLUXDB_ORG
              valueFrom:
                configMapKeyRef:
                  name: sig-data-config
                  key: INFLUXDB_ORG
            - name: INFLUXDB_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: sig-data-config
                  key: INFLUXDB_BUCKET
            - name: INFLUXDB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: sig-data-secrets
                  key: INFLUXDB_TOKEN
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasource
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboard-providers
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: grafana-datasource
          configMap:
            name: grafana-datasource
        - name: grafana-dashboard-providers
          configMap:
            name: grafana-dashboard-providers
        - name: grafana-dashboards
          emptyDir: {}
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: sig-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: sig-data
spec:
  selector:
    app: grafana
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  type: ClusterIP
