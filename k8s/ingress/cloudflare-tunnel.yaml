apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: sig-data
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflared
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared:latest
          args:
            - tunnel
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
          livenessProbe:
            httpGet:
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config
              readOnly: true
            - name: creds
              mountPath: /etc/cloudflared/creds
              readOnly: true
      volumes:
        - name: creds
          secret:
            secretName: cloudflared-secret
        - name: config
          configMap:
            name: cloudflared-config
            items:
              - key: config.yaml
                path: config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared-config
  namespace: sig-data
data:
  config.yaml: |
    tunnel: 743fc85d-6239-4d79-8671-4c4b0190c2a3
    credentials-file: /etc/cloudflared/creds/credentials.json

    ingress:
      # Grafana
      - hostname: grafana.coeusdata.xyz
        service: http://grafana:3000

      # InfluxDB
      - hostname: influxdb.coeusdata.xyz
        service: http://influxdb:8086

      # ArgoCD
      - hostname: argocd.coeusdata.xyz
        service: http://argocd-server.argocd:80

      # Catch-all rule
      - service: http_status:404
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflared-secret
  namespace: sig-data
type: Opaque
data:
  # Base64 encoded tunnel credentials JSON
  # Get this from: cloudflared tunnel create <tunnel-name>
  credentials.json: ""  # Replace with your base64 encoded credentials